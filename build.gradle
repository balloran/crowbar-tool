buildscript {
    ext.kotlin_version = '1.6.10'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

plugins{
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.jmailen.kotlinter' version '2.3.2'
    id 'antlr'
}

group 'Crowbar'
version '1.1.0'

apply plugin: 'kotlin'

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = '6.1.1'
}

sourceSets {
    main {
        java.srcDirs += 'build/generated-src/main'
        kotlin.srcDirs += 'build/generated-src/main'
        antlr.srcDirs += 'src/main/antlr'
    }
}

dependencies {
    testImplementation("io.kotlintest:kotlintest-runner-junit5:3.4.2")
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation("com.github.ajalt:clikt:2.8.0")
    implementation "org.antlr:antlr4:4.9.3"
    antlr "org.antlr:antlr4:4.9.3"
}

kotlinter {
    disabledRules = ['no-multi-spaces', 'no-wildcard-imports']
}

lintKotlinMain {
    exclude '**/data/**'
    exclude '**/rule/**'
    exclude '**/main/**'
    exclude '**/tree/**'
    exclude '**/types/**'
    exclude '**/interfaces/ABSInterface.kt'
    exclude '**/interfaces/SMTInterface.kt'
}

lintKotlinTest {
    exclude '*'
}

formatKotlinMain {
    exclude '**/data/**'
    exclude '**/rule/**'
    exclude '**/main/**'
    exclude '**/tree/**'
    exclude '**/types/**'
    exclude '**/interfaces/ABSInterface.kt'
    exclude '**/interfaces/SMTInterface.kt'
}

formatKotlinTest {
    exclude '*'
}

generateGrammarSource {
    outputDirectory = file("build/generated-src/main/antlr/crowbar/gen")
    arguments += ["-visitor"]
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

jar {
    manifest {
        attributes 'Main-Class': 'org.abs_models.crowbar.main.MainKt'
    }
}

shadowJar{
    archiveFileName = "crowbar.${extension}"
}

compileKotlin.dependsOn generateGrammarSource
lintKotlinMain.dependsOn generateGrammarSource
assemble.dependsOn shadowJar
